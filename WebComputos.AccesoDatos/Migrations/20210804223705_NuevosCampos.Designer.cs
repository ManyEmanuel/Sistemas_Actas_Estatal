// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebComputos.AccesoDatos.Data;

namespace WebComputos.AccesoDatos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210804223705_NuevosCampos")]
    partial class NuevosCampos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta", b =>
                {
                    b.Property<int>("IdActa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesIncidentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdActaDetalle")
                        .HasColumnType("int");

                    b.Property<bool>("Incidentes")
                        .HasColumnType("bit");

                    b.Property<int>("Sobrantes")
                        .HasColumnType("int");

                    b.Property<int>("Solicitud")
                        .HasColumnType("int");

                    b.Property<int>("TotalVotos")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VotosCiudadanos")
                        .HasColumnType("int");

                    b.Property<int>("VotosRepresentantes")
                        .HasColumnType("int");

                    b.Property<int>("VotosUrnas")
                        .HasColumnType("int");

                    b.HasKey("IdActa");

                    b.HasIndex("Estatus");

                    b.HasIndex("IdActaDetalle");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("Actas");
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta_Detalle", b =>
                {
                    b.Property<int>("IdActaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CapturadoComplemento")
                        .HasColumnType("bit");

                    b.Property<bool>("CapturadoVotos")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCasilla")
                        .HasColumnType("int");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.HasKey("IdActaDetalle");

                    b.HasIndex("IdCasilla");

                    b.HasIndex("IdEleccion");

                    b.ToTable("Actas_Detalle");
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta_Detalle_RP", b =>
                {
                    b.Property<int>("IdActaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CapturadoComplemento")
                        .HasColumnType("bit");

                    b.Property<bool>("CapturadoVotos")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCasilla")
                        .HasColumnType("int");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.HasKey("IdActaDetalle");

                    b.HasIndex("IdCasilla");

                    b.HasIndex("IdEleccion");

                    b.ToTable("Acta_Detalle_RP");
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta_Extranjero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Deposito")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesIncidentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Incidentes")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Instalacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumMesa")
                        .HasColumnType("int");

                    b.Property<int>("PersonasVotaron")
                        .HasColumnType("int");

                    b.Property<int>("SobreVotos")
                        .HasColumnType("int");

                    b.Property<bool>("UrnaVacia")
                        .HasColumnType("bit");

                    b.Property<bool>("UrnaVista")
                        .HasColumnType("bit");

                    b.Property<int>("VotosUrnas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Acta_Extranjero");
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta_RP", b =>
                {
                    b.Property<int>("IdActa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesIncidentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdActaDetalle")
                        .HasColumnType("int");

                    b.Property<bool>("Incidentes")
                        .HasColumnType("bit");

                    b.Property<int>("Sobrantes")
                        .HasColumnType("int");

                    b.Property<int>("Solicitud")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VotosCiudadanos")
                        .HasColumnType("int");

                    b.Property<int>("VotosUrnas")
                        .HasColumnType("int");

                    b.HasKey("IdActa");

                    b.HasIndex("Estatus");

                    b.HasIndex("IdActaDetalle");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("Acta_RP");
                });

            modelBuilder.Entity("WebComputos.Models.T_Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido_Materno_Propietario")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Materno_Propietario1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Materno_Suplente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Materno_Suplente1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Paterno_Propietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Paterno_Propietario1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Paterno_Suplente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Paterno_Suplente1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CoalicionId")
                        .HasColumnType("int");

                    b.Property<int?>("DemarcacionId")
                        .HasColumnType("int");

                    b.Property<int?>("DistritoId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Foto_Propietario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto_Propietario1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto_Suplente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto_Suplente1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCoalicion")
                        .HasColumnType("bit");

                    b.Property<string>("MR_RP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mote_Propietario")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mote_Propietario1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mote_Suplente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mote_Suplente1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres_Propietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombres_Propietario1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombres_Suplente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombres_Suplente1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<int?>("PartidoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Sexo_Propietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo_Propietario1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo_Suplente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo_Suplente1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoEleccionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoalicionId");

                    b.HasIndex("DemarcacionId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("PartidoId");

                    b.HasIndex("TipoEleccionId");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("WebComputos.Models.T_Casilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Boletas_Entregadas")
                        .HasColumnType("int")
                        .HasMaxLength(6);

                    b.Property<bool>("Computado")
                        .HasColumnType("bit");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("ExtContigua")
                        .HasColumnType("int");

                    b.Property<int>("ListadoNominal")
                        .HasColumnType("int")
                        .HasMaxLength(6);

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<int>("NoCasilla")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PadronElec")
                        .HasColumnType("int")
                        .HasMaxLength(6);

                    b.Property<bool>("Recibido")
                        .HasColumnType("bit");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("SeccionId")
                        .HasColumnType("int");

                    b.Property<int>("TipoCasillaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoLugar")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("SeccionId");

                    b.HasIndex("TipoCasillaId");

                    b.ToTable("Casillas");
                });

            modelBuilder.Entity("WebComputos.Models.T_Causal_Recuento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasillaId")
                        .HasColumnType("int");

                    b.Property<bool>("Causal1")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal10")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal11")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal2")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal3")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal4")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal5")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal6")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal7")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal8")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal9")
                        .HasColumnType("bit");

                    b.Property<int?>("DetalleActaComputoId")
                        .HasColumnType("int");

                    b.Property<int?>("DetalleActaComputoRPId")
                        .HasColumnType("int");

                    b.Property<bool>("RP")
                        .HasColumnType("bit");

                    b.Property<bool>("Recuento_Total")
                        .HasColumnType("bit");

                    b.Property<int>("TipoEleccionId")
                        .HasColumnType("int");

                    b.Property<int>("Total_Causales")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasillaId");

                    b.HasIndex("DetalleActaComputoId");

                    b.HasIndex("DetalleActaComputoRPId");

                    b.HasIndex("TipoEleccionId");

                    b.ToTable("Causales_recuento");
                });

            modelBuilder.Entity("WebComputos.Models.T_Coalicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Coaliciones");
                });

            modelBuilder.Entity("WebComputos.Models.T_Combinacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoalicionId")
                        .HasColumnType("int");

                    b.Property<string>("Combinacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tamaño")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoalicionId");

                    b.ToTable("Combinaciones");
                });

            modelBuilder.Entity("WebComputos.Models.T_Demarcacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("Indigena")
                        .HasColumnType("bit");

                    b.Property<int?>("MunicipioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("No_Demarcacion")
                        .HasColumnType("int")
                        .HasMaxLength(3);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Demarcaciones");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Acta_Computo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasillaId")
                        .HasColumnType("int");

                    b.Property<bool>("Computado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoComputo")
                        .HasColumnType("int");

                    b.Property<int>("TipoEleccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasillaId");

                    b.HasIndex("TipoEleccionId");

                    b.ToTable("Detalle_Acta_Computos");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Acta_Computo_RP", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasillaId")
                        .HasColumnType("int");

                    b.Property<bool>("Computado")
                        .HasColumnType("bit");

                    b.Property<bool>("Recuento_Total")
                        .HasColumnType("bit");

                    b.Property<bool>("Reservado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoComputo")
                        .HasColumnType("int");

                    b.Property<int>("TipoEleccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasillaId");

                    b.HasIndex("TipoEleccionId");

                    b.ToTable("Detalle_Acta_Computos_RP");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Coalicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CoalicionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("PartidoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoalicionId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Detalle_Coaliciones");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Combinacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CombinacionId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CombinacionId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Detalle_Combinacion");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta", b =>
                {
                    b.Property<int>("IdDetalleVotosActa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCoalicion")
                        .HasColumnType("int");

                    b.Property<int>("IdCombinacion")
                        .HasColumnType("int");

                    b.Property<int>("IdIndependiente")
                        .HasColumnType("int");

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<int>("IdVotosActa")
                        .HasColumnType("int");

                    b.Property<int>("Votos")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleVotosActa");

                    b.HasIndex("IdVotosActa");

                    b.ToTable("Detalle_Votos_Acta");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta_Actor", b =>
                {
                    b.Property<int>("IdDetalleVotosActor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCoalicion")
                        .HasColumnType("int");

                    b.Property<int>("IdIndependiente")
                        .HasColumnType("int");

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<int>("IdVotosActas")
                        .HasColumnType("int");

                    b.Property<int>("Votos")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleVotosActor");

                    b.HasIndex("IdVotosActas");

                    b.ToTable("Detalle_Votos_Acta_Actor");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta_Partido", b =>
                {
                    b.Property<int>("IdDetalleVotosPartidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Demarcacion")
                        .HasColumnType("int");

                    b.Property<int>("Distrito")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.Property<int>("IdIndependiente")
                        .HasColumnType("int");

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<int>("Municipio")
                        .HasColumnType("int");

                    b.Property<int>("Votos")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleVotosPartidos");

                    b.HasIndex("IdEleccion");

                    b.ToTable("Detalle_Votos_Acta_Partido");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta_RP", b =>
                {
                    b.Property<int>("IdDetalleVotosActa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<int>("IdVotosActa")
                        .HasColumnType("int");

                    b.Property<int>("Votos")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleVotosActa");

                    b.HasIndex("IdVotosActa");

                    b.ToTable("Detalle_Votos_Acta_RP");
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Ext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCoalicion")
                        .HasColumnType("int");

                    b.Property<int>("IdCombinacion")
                        .HasColumnType("int");

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<int>("IdVotosActa")
                        .HasColumnType("int");

                    b.Property<int>("Votos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVotosActa");

                    b.ToTable("Detalle_Votos_Ext");
                });

            modelBuilder.Entity("WebComputos.Models.T_Distrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Integracion")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("NoDistrito")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Distritos");
                });

            modelBuilder.Entity("WebComputos.Models.T_Estatus_Acta", b =>
                {
                    b.Property<int>("IdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.HasKey("IdEstatus");

                    b.ToTable("Estatus_Acta");
                });

            modelBuilder.Entity("WebComputos.Models.T_HistorialModificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Complementaria")
                        .HasColumnType("int");

                    b.Property<int>("Concepto")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCasilla")
                        .HasColumnType("int");

                    b.Property<int>("Paquetes")
                        .HasColumnType("int");

                    b.Property<int>("TipoEleccion")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Votos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCasilla");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("HistorialModificaciones");
                });

            modelBuilder.Entity("WebComputos.Models.T_HistorialSubsanar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasillaId")
                        .HasColumnType("int");

                    b.Property<bool>("Causal1")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal10")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal11")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal2")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal3")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal4")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal5")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal6")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal7")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal8")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal9")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHora_Solicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCausal")
                        .HasColumnType("int");

                    b.Property<bool>("RP")
                        .HasColumnType("bit");

                    b.Property<bool>("Recuento_Total")
                        .HasColumnType("bit");

                    b.Property<int>("Solicitud")
                        .HasColumnType("int");

                    b.Property<int>("TipoEleccionId")
                        .HasColumnType("int");

                    b.Property<int>("Total_Causales")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CasillaId");

                    b.HasIndex("IdCausal");

                    b.HasIndex("TipoEleccionId");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("HistorialSubsanar");
                });

            modelBuilder.Entity("WebComputos.Models.T_HistoricoRestablecer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasillaId")
                        .HasColumnType("int");

                    b.Property<bool>("Causal1")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal10")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal11")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal2")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal3")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal4")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal5")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal6")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal7")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal8")
                        .HasColumnType("bit");

                    b.Property<bool>("Causal9")
                        .HasColumnType("bit");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCausal")
                        .HasColumnType("int");

                    b.Property<int>("IdHistorial")
                        .HasColumnType("int");

                    b.Property<bool>("RP")
                        .HasColumnType("bit");

                    b.Property<bool>("Recuento_Total")
                        .HasColumnType("bit");

                    b.Property<int>("TipoEleccionId")
                        .HasColumnType("int");

                    b.Property<int>("Total_Causales")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CasillaId");

                    b.HasIndex("IdCausal");

                    b.HasIndex("IdHistorial");

                    b.HasIndex("TipoEleccionId");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("HistoricoRestablecer");
                });

            modelBuilder.Entity("WebComputos.Models.T_Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cabecera_Municipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoEstado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("WebComputos.Models.T_Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("NoExterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoInterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Oficinas");
                });

            modelBuilder.Entity("WebComputos.Models.T_Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("Independiente")
                        .HasColumnType("bit");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("PantoneFondo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PantoneLetra")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Prioridad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("WebComputos.Models.T_Puntos_Recuento", b =>
                {
                    b.Property<int>("IdPuntosRecuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasillasTot")
                        .HasColumnType("int");

                    b.Property<int>("Demarcacion")
                        .HasColumnType("int");

                    b.Property<int>("Distrito")
                        .HasColumnType("int");

                    b.Property<int>("Eleccion")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("GrupoTrabajo")
                        .HasColumnType("int");

                    b.Property<int>("Municipio")
                        .HasColumnType("int");

                    b.Property<int>("NumEjercicio")
                        .HasColumnType("int");

                    b.Property<int>("PuntoRecu")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdPuntosRecuento");

                    b.HasIndex("Eleccion");

                    b.HasIndex("Municipio");

                    b.ToTable("Puntos_Recuento");
                });

            modelBuilder.Entity("WebComputos.Models.T_Recepcion_Paquete", b =>
                {
                    b.Property<int>("IdRecepcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alteracion")
                        .HasColumnType("bit");

                    b.Property<int>("Cargo_Entrega")
                        .HasColumnType("int");

                    b.Property<int>("Cargo_Recibe")
                        .HasColumnType("int");

                    b.Property<bool>("Cinta")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Firma")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HoraRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCasilla")
                        .HasColumnType("int");

                    b.Property<int>("Lugar_Entrega")
                        .HasColumnType("int");

                    b.Property<int>("Medio_Entrega")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Entrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaqueteElec")
                        .HasColumnType("bit");

                    b.Property<bool>("SobrePrep")
                        .HasColumnType("bit");

                    b.Property<int>("Solicitud")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRecepcion");

                    b.HasIndex("IdCasilla");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("Recepcion_Paquete");
                });

            modelBuilder.Entity("WebComputos.Models.T_Seccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Cabecera_Localidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("DemarcacionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("DistritoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("Listado_Nominal")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("MunicipioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Padron_Electoral")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Seccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoSeccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DemarcacionId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Secciones");
                });

            modelBuilder.Entity("WebComputos.Models.T_Tipo_Acta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TipoEleccionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEleccionId");

                    b.ToTable("Tipos_Acta");
                });

            modelBuilder.Entity("WebComputos.Models.T_Tipo_Casilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Tipos_Casilla");
                });

            modelBuilder.Entity("WebComputos.Models.T_Tipo_Eleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.ToTable("Tipos_Eleccion");
                });

            modelBuilder.Entity("WebComputos.Models.T_Votos_Acta", b =>
                {
                    b.Property<int>("IdRegistroVotos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdActaDetalle")
                        .HasColumnType("int");

                    b.Property<int>("NoRegistrados")
                        .HasColumnType("int");

                    b.Property<int>("Nulos")
                        .HasColumnType("int");

                    b.Property<int>("Solicitud")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("TotalSistema")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRegistroVotos");

                    b.HasIndex("IdActaDetalle");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("Votos_Actas");
                });

            modelBuilder.Entity("WebComputos.Models.T_Votos_Acta_Ext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoRegistrados")
                        .HasColumnType("int");

                    b.Property<int>("Nulos")
                        .HasColumnType("int");

                    b.Property<int>("Solicitud")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("TotalSistema")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Votos_Actas_Ext");
                });

            modelBuilder.Entity("WebComputos.Models.T_Votos_Acta_RP", b =>
                {
                    b.Property<int>("IdRegistroVotosRP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdActaDetalle")
                        .HasColumnType("int");

                    b.Property<int>("NoRegistrados")
                        .HasColumnType("int");

                    b.Property<int>("Nulos")
                        .HasColumnType("int");

                    b.Property<int>("Solicitud")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("TotalSistema")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRegistroVotosRP");

                    b.HasIndex("IdActaDetalle");

                    b.HasIndex("UsuarioRegistro");

                    b.ToTable("Votos_Acta_RP");
                });

            modelBuilder.Entity("WebComputos.Models.T_Usuario", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Acceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido_Materno")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Apellido_Paterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Foto_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("OficinaId")
                        .HasColumnType("int");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("OficinaId");

                    b.HasDiscriminator().HasValue("T_Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta", b =>
                {
                    b.HasOne("WebComputos.Models.T_Estatus_Acta", "LEstatus")
                        .WithMany()
                        .HasForeignKey("Estatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Acta_Detalle", "LActaDetalle")
                        .WithMany()
                        .HasForeignKey("IdActaDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta_Detalle", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "LCasilla")
                        .WithMany()
                        .HasForeignKey("IdCasilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "LTipoEleccion")
                        .WithMany()
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta_Detalle_RP", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "LCasilla")
                        .WithMany()
                        .HasForeignKey("IdCasilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "LTipoEleccion")
                        .WithMany()
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Acta_RP", b =>
                {
                    b.HasOne("WebComputos.Models.T_Estatus_Acta", "LEstatus")
                        .WithMany()
                        .HasForeignKey("Estatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Acta_Detalle_RP", "LActaDetalle")
                        .WithMany()
                        .HasForeignKey("IdActaDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_Candidato", b =>
                {
                    b.HasOne("WebComputos.Models.T_Coalicion", "Coalicion")
                        .WithMany()
                        .HasForeignKey("CoalicionId");

                    b.HasOne("WebComputos.Models.T_Demarcacion", "Demarcacion")
                        .WithMany()
                        .HasForeignKey("DemarcacionId");

                    b.HasOne("WebComputos.Models.T_Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId");

                    b.HasOne("WebComputos.Models.T_Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");

                    b.HasOne("WebComputos.Models.T_Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "Tipo_Eleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Casilla", b =>
                {
                    b.HasOne("WebComputos.Models.T_Municipio", "LMunicipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Seccion", "LSeccion")
                        .WithMany()
                        .HasForeignKey("SeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Casilla", "LTipoCasilla")
                        .WithMany()
                        .HasForeignKey("TipoCasillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Causal_Recuento", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "LCasilla")
                        .WithMany()
                        .HasForeignKey("CasillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Detalle_Acta_Computo", "LDetalle_Acta_Computo")
                        .WithMany("Causales")
                        .HasForeignKey("DetalleActaComputoId");

                    b.HasOne("WebComputos.Models.T_Detalle_Acta_Computo_RP", "LDetalle_Acta_Computo_RP")
                        .WithMany("Causales")
                        .HasForeignKey("DetalleActaComputoRPId");

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "LTipo_Eleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Combinacion", b =>
                {
                    b.HasOne("WebComputos.Models.T_Coalicion", "Coalicion")
                        .WithMany()
                        .HasForeignKey("CoalicionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Demarcacion", b =>
                {
                    b.HasOne("WebComputos.Models.T_Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Acta_Computo", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "Casilla")
                        .WithMany()
                        .HasForeignKey("CasillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "TipoEleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Acta_Computo_RP", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "Casilla")
                        .WithMany()
                        .HasForeignKey("CasillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "TipoEleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Coalicion", b =>
                {
                    b.HasOne("WebComputos.Models.T_Coalicion", "Coalicion")
                        .WithMany()
                        .HasForeignKey("CoalicionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Combinacion", b =>
                {
                    b.HasOne("WebComputos.Models.T_Combinacion", "Combinacion")
                        .WithMany()
                        .HasForeignKey("CombinacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta", b =>
                {
                    b.HasOne("WebComputos.Models.T_Votos_Acta", "LVotosActa")
                        .WithMany()
                        .HasForeignKey("IdVotosActa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta_Actor", b =>
                {
                    b.HasOne("WebComputos.Models.T_Votos_Acta", "LVotosActa")
                        .WithMany()
                        .HasForeignKey("IdVotosActas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta_Partido", b =>
                {
                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "LEleccion")
                        .WithMany()
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Acta_RP", b =>
                {
                    b.HasOne("WebComputos.Models.T_Votos_Acta_RP", "LVotosActa")
                        .WithMany()
                        .HasForeignKey("IdVotosActa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Detalle_Votos_Ext", b =>
                {
                    b.HasOne("WebComputos.Models.T_Votos_Acta_Ext", "LVotosActa")
                        .WithMany()
                        .HasForeignKey("IdVotosActa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_HistorialModificaciones", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "LCasilla")
                        .WithMany()
                        .HasForeignKey("IdCasilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_HistorialSubsanar", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "LCasilla")
                        .WithMany()
                        .HasForeignKey("CasillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Causal_Recuento", "LCausal")
                        .WithMany()
                        .HasForeignKey("IdCausal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "LTipo_Eleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_HistoricoRestablecer", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "LCasilla")
                        .WithMany()
                        .HasForeignKey("CasillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Causal_Recuento", "LCausal")
                        .WithMany()
                        .HasForeignKey("IdCausal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_HistorialSubsanar", "LHistorial")
                        .WithMany()
                        .HasForeignKey("IdHistorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "LTipo_Eleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_Oficina", b =>
                {
                    b.HasOne("WebComputos.Models.T_Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Puntos_Recuento", b =>
                {
                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "LEleccion")
                        .WithMany()
                        .HasForeignKey("Eleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Municipio", "LMunicipio")
                        .WithMany()
                        .HasForeignKey("Municipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Recepcion_Paquete", b =>
                {
                    b.HasOne("WebComputos.Models.T_Casilla", "LCasilla")
                        .WithMany()
                        .HasForeignKey("IdCasilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_Seccion", b =>
                {
                    b.HasOne("WebComputos.Models.T_Demarcacion", "LDemarcacion")
                        .WithMany()
                        .HasForeignKey("DemarcacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Distrito", "LDistrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Municipio", "LMunicipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Tipo_Acta", b =>
                {
                    b.HasOne("WebComputos.Models.T_Tipo_Eleccion", "TipoEleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.T_Votos_Acta", b =>
                {
                    b.HasOne("WebComputos.Models.T_Acta_Detalle", "LActaDetalle")
                        .WithMany()
                        .HasForeignKey("IdActaDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_Votos_Acta_RP", b =>
                {
                    b.HasOne("WebComputos.Models.T_Acta_Detalle_RP", "LActaDetalle")
                        .WithMany()
                        .HasForeignKey("IdActaDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.T_Usuario", "LUsuario")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistro");
                });

            modelBuilder.Entity("WebComputos.Models.T_Usuario", b =>
                {
                    b.HasOne("WebComputos.Models.T_Oficina", "Oficina")
                        .WithMany()
                        .HasForeignKey("OficinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
