@model WebComputos.Models.ViewModels.T_Votos_Actas_Extranjero_VM
@{
    IEnumerable<T_Partido> Lpar = ViewBag.partido;
    IEnumerable<T_Combinacion> Lcom = ViewBag.combinacion;

    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .externo {
        align-items: center;
        display: flex;
        justify-content: center;
    }

    #centrador {
        position: relative;
        width: 100px;
        height: 80px;
        background-color: white;
    }

    #imagen {
        position: absolute;
        width: 50px;
        height: 50px;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
    }

    #imagenx {
        position: absolute;
        width: 50px;
        height: 25px;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
    }

    #imagenc {
        position: absolute;
        width: 100px;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
    }
</style>
<br />
<div class="row">
    <div class="col-md-12">
        <div class="card card-secondary">
            <div class="card-header">
                <h3 class="card-title">Votos registrados en el Acta del Voto en el Extranjero</h3>
            </div>
            <div class="card-body">
                @if (Lpar.Count() > 0)
                {
                    <div class="card bg-gradient-gray">
                        <div class="card-body">
                            <h5 class="card-text text-center">Partidos</h5>
                        </div>
                    </div>
                    <div class="row">
                        @{
                            int contador = 0;
                        }
                        @foreach (var Resultado in Model.DetalleVotosExt)
                        {
                            if (Resultado.IdPartido != 0)
                            {
                                var partido = Lpar.FirstOrDefault(x => x.Id == Resultado.IdPartido && x.Independiente == false);
                                <div class="col-md-2">
                                    <div class="card externo border">
                                        <div id="centrador">
                                          
                                                <img src="@Url.Content(partido.LogoURL)" id="imagen" />
                                            
                                        </div>
                                        <div class="card-body">
                                            @Html.TextBoxFor(x => x.DetalleVotosExt[contador].Votos, new { @type = "number", @style = "text-align:center; form-control", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>


                            }
                            contador++;
                        }
                    </div>



                    <div class="card bg-gradient-gray">
                        <div class="card-body">
                            <h5 class="card-text text-center">Coaliciones</h5>
                        </div>
                    </div>
                    <div class="row">
                        @{
                            int contador1 = 0;
                        }
                        @foreach (var Combi in Model.DetalleVotosExt)
                        {
                            if (Combi.IdCombinacion != 0)
                            {
                                var coalicion = Lcom.FirstOrDefault(x => x.Id == Combi.IdCombinacion);
                                <div class="col-md-2">
                                    <div class="card externo border">
                                        <div id="centrador">
                                            <img src="@Url.Content(coalicion.LogoURL)" id="imagenc" />
                                        </div>
                                        <div class="card-body text-center">
                                            @Html.Label(coalicion.Combinacion)
                                            <br />
                                            @Html.TextBoxFor(x => x.DetalleVotosExt[contador1].Votos, new { @type = "number", @style = "text-align:center; form-control", @readonly = "readonly" })
                                            @Html.HiddenFor(x => x.DetalleVotosExt[contador1].IdCombinacion)
                                            @Html.HiddenFor(x => x.DetalleVotosExt[contador1].IdCoalicion)
                                            @Html.HiddenFor(x => x.DetalleVotosExt[contador1].Id)
                                        </div>
                                    </div>
                                </div>
                            }
                            contador1++;
                        }
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <div class="card border">
                                <div class="card-body text-center">
                                    <p class="text-center"><strong>Candidatos no registrados</strong></p>
                                    <br />
                                    @Html.TextBoxFor(x => x.Votos_Ext.NoRegistrados, new { @type = "number", @style = "text-align:center; form-control", @readonly = "readonly" })
                                    @Html.HiddenFor(x => x.Votos_Ext.Id)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="card border">
                                <div class="card-body text-center">
                                    <p class="text-center"><strong>Votos nulos</strong></p>
                                    <br />
                                    @Html.TextBoxFor(x => x.Votos_Ext.Nulos, new { @type = "number", @style = "text-align:center; form-control", @readonly = "readonly" })
                                    @Html.HiddenFor(x => x.Votos_Ext.Id)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="card border">
                                <div class="card-body text-center">
                                    <p class="text-center"><strong>Total de Votos</strong></p>
                                    <br />
                                    @Html.TextBoxFor(x => x.Votos_Ext.Total, new { @type = "number", @style = "text-align:center; form-control", @readonly = "readonly" })
                                    @Html.HiddenFor(x => x.Votos_Ext.Id)
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="text-right">
                    <button type="button" class="btn btn-danger btn-lg rounded" style="width:auto;">
                        <a asp-action="IndexVotos"  class="text-white">Volver al listado</a>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>



        



    